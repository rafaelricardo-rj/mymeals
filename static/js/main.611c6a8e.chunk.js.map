{"version":3,"sources":["utils/helper.js","utils/api.js","components/FoodList.js","components/ShoppingList.js","components/App.js","actions/index.js","serviceWorker.js","reducers/index.js","index.js"],"names":["capitalize","str","toUpperCase","concat","slice","API_KEY","process","fetchRecipes","food","trim","fetch","then","res","json","hits","map","recipe","FoodList","onSelect","length","className","item","onClick","key","label","src","image","alt","Math","floor","calories","source","ShoppingList","list","App","state","foodModalOpen","meal","day","loadingFood","openFoodModal","setState","closeFoodModal","searchFood","e","input","value","preventDefault","loading","openIngredientsModal","ingredientsModalOpen","closeIngredientsModal","generateShoppingList","props","calendar","reduce","result","meals","breakfast","lunch","dinner","push","ings","ingredientLines","console","log","this","selectRecipe","remove","mealOrder","mealType","size","overlayClassName","isOpen","onRequestClose","contentLabel","delay","type","color","placeholder","ref","Component","connect","Object","keys","dispatch","data","addRecipe","Boolean","window","location","hostname","match","initialCalendarState","sunday","monday","tuesday","wednesday","thursday","friday","saturday","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","next","group","info","getState","groupEnd","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.611c6a8e.chunk.js","sourcesContent":["export function capitalize(str = ''){\n    return typeof str !== 'string'\n        ? ''\n        : str[0].toUpperCase().concat(str.slice(1))\n}","const API_ID = process.env.REACT_APP_API_ID\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nexport function fetchRecipes(food = ''){\n    food = food.trim()\n\n    return fetch(`https://api.edamam.com/search?q=${food}&app_id=${API_ID}&app_key=${API_KEY}`)\n        .then( (res) => res.json())\n        .then( ({ hits }) => hits.map( ({ recipe }) => recipe) )\n}","import React from 'react'\n\nfunction trim (str) {\n  return str.length > 16\n    ? str.slice(0, 16) + '...'\n    : str\n}\n\nexport default function FoodList ({ food, onSelect }) {\n  if (food.length === 0) {\n    return <p>Your search has 0 results.</p>\n  }\n\n  return (\n    <ul className='food-list'>\n      {food.map((item) => (\n        <li onClick={() => onSelect(item)} key={item.label}>\n          <h3>{trim(item.label)}</h3>\n          <img src={item.image} alt={item.label} />\n          <div>{Math.floor(item.calories)} Calories</div>\n          <div>{item.source}</div>\n        </li>\n      ))}\n    </ul>\n  )\n}","import React from 'react'\n\nexport default function ShoppingList ({ list }) {\n  return (\n    <div className='ingredients-list'>\n      <h3 className='subheader'>\n        Your Shopping List\n      </h3>\n      <ul>\n        {list.map((item) => (\n          <li key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { addRecipe, removeFromCalendar } from '../actions'\nimport { capitalize } from '../utils/helper'\nimport { FaCalendar } from 'react-icons/fa'\nimport Modal from 'react-modal'\nimport { FaArrowCircleRight } from 'react-icons/fa'\nimport Loading from 'react-loading'\nimport { fetchRecipes } from '../utils/api'\nimport FoodList from './FoodList'\nimport ShoppingList from './ShoppingList'\n\nclass App extends Component {\n  state = {\n    foodModalOpen: false,\n    meal: null,\n    day: null,\n    food: null,\n    loadingFood:false\n  }\n\n  openFoodModal = ({meal, day}) => {\n    this.setState(() => ({ foodModalOpen: true, meal, day }))\n  }\n\n  closeFoodModal = () => {\n    this.setState(() => ({ foodModalOpen: false, meal: null, day: null, food: null }))\n  }\n\n  searchFood = (e) => {\n    if(!this.input.value){\n      return\n    }\n    e.preventDefault()\n    this.setState(() => ({ loading: true }))\n    fetchRecipes(this.input.value)\n      .then((food) => this.setState(() => ({ food, loadingFood: false })))\n  }\n\n  openIngredientsModal = () => this.setState(() => ({ ingredientsModalOpen: true }))\n  closeIngredientsModal = () => this.setState(() => ({ ingredientsModalOpen: false }))\n  generateShoppingList = () => {\n    return this.props.calendar.reduce((result, { meals }) => {\n      const { breakfast, lunch, dinner } = meals\n\n      breakfast && result.push(breakfast)\n      lunch && result.push(lunch)\n      dinner && result.push(dinner)\n\n      return result\n    }, [])\n    .reduce((ings, { ingredientLines }) => ings.concat(ingredientLines), [])\n  }\n\n  render() {\n    console.log(this.props);\n    const { foodModalOpen, loadingFood, food, ingredientsModalOpen } = this.state\n    const { calendar, selectRecipe, remove } = this.props\n    const mealOrder = ['breakfast', 'lunch', 'dinner']\n\n    return (\n      <div className='container'>\n        <div className='nav'>\n          <h1 className='header'>UdaciMeals</h1>\n          <button\n            className='shopping-list'\n            onClick={this.openIngredientsModal}>\n              Shopping List\n          </button>\n        </div>\n        <ul className='meal-types'>\n          {mealOrder.map((mealType) => (\n            <li key={mealType} className='subheader'>\n              {capitalize(mealType)}\n            </li>\n          ))}\n        </ul>\n\n        <div className='calendar'>\n          <div className='days'>\n            {calendar.map(({day}) => <h3 key={day} className='subheader'>{capitalize(day)}</h3>)}\n          </div>\n          <div className='icon-grid'>\n            {calendar.map(({day, meals}) => (\n              <ul key={day}>\n                {mealOrder.map((meal) => (\n                  <li key={meal} className='meal'>\n                    {meals[meal]\n                      ? <div className='food-item'>\n                          <img src={meals[meal].image} alt={meals[meal].label}/>\n                          <button onClick={() => remove({meal, day})}>Clear</button>\n                        </div>\n                      : <button onClick={() => this.openFoodModal({meal, day})} className='icon-btn'>\n                          <FaCalendar size={30} />\n                        </button>\n                    }\n                  </li>\n                ))}\n              </ul>\n            ))}\n          </div>\n        </div>\n        <Modal  className='modal' overlayClassName='overlay' isOpen={foodModalOpen} onRequestClose={this.closeFoodModal} contentLabel='Modal'>\n          <div>\n            {loadingFood === true\n              ? <Loading delay={200} type='spin' color='#222' className='loading' />\n              : <div className='search-container'>\n                  <h3 className='subheader'>\n                    Find a meal for {capitalize(this.state.day)} {this.state.meal}.\n                  </h3>\n                  <div className='search'>\n                    <input\n                      className='food-input'\n                      type='text'\n                      placeholder='Search Foods'\n                      ref={(input) => this.input = input}\n                    />\n                    <button\n                      className='icon-btn'\n                      onClick={this.searchFood}>\n                        <FaArrowCircleRight size={30}/>\n                    </button>\n                  </div>\n                  {food !== null && (\n                    <FoodList\n                      food={food}\n                      onSelect={(recipe) => {\n                        selectRecipe({ recipe, day: this.state.day, meal: this.state.meal })\n                        this.closeFoodModal()\n                      }}\n                    />)}\n                </div>}\n          </div>\n        </Modal>\n        <Modal\n          className='modal'\n          overlayClassName='overlay'\n          isOpen={ingredientsModalOpen}\n          onRequestClose={this.closeIngredientsModal}\n          contentLabel='Modal'\n        >\n          {ingredientsModalOpen && <ShoppingList list={this.generateShoppingList()}/>}\n        </Modal>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ( { food, calendar } ) {\n  const dayOrder = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\n\n  return {\n    calendar: dayOrder.map((day) => ({\n      day,\n      meals: Object.keys(calendar[day]).reduce((meals, meal) => {\n        meals[meal] = calendar[day][meal] ? food[calendar[day][meal]] : null\n\n        return meals\n      }, {})\n    })),\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    selectRecipe: (data) => dispatch(addRecipe(data)),\n    remove: (data) => dispatch(removeFromCalendar(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","export const ADD_RECIPE = 'ADD_RECIPE'\nexport const REMOVE_FROM_CALENDAR = 'REMOVE_FROM_CALENDAR'\n\nexport function addRecipe({ day, recipe, meal }){\n    return {\n        type: ADD_RECIPE,\n        recipe,\n        day,\n        meal\n    }\n}\n\nexport function removeFromCalendar({ day, meal }){\n    return {\n        type: REMOVE_FROM_CALENDAR,\n        day,\n        meal\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport { ADD_RECIPE, REMOVE_FROM_CALENDAR } from '../actions'\n\nfunction food (state = {}, action){\n  switch(action.type){\n    case ADD_RECIPE :\n      const { recipe } = action\n\n      return {\n        ...state,\n        [recipe.label]: recipe,\n      }\n      default :\n        return state\n  }\n}\n\nconst initialCalendarState = {\n    sunday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      },\n      monday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      },\n      tuesday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      },\n      wednesday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      },\n      thursday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      },\n      friday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      },\n      saturday: {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n      }\n}\nfunction calendar(state = initialCalendarState, action){\n    const { day, recipe, meal } = action\n\n    switch(action.type){\n        case ADD_RECIPE:\n            return {\n                ...state,\n                [day]: { ...state[day], [meal]: recipe.label }\n            }\n        case REMOVE_FROM_CALENDAR:\n            return {\n                ...state,\n                [day]: { ...state[day], [meal]: null }\n            }\n        default:\n            return state\n    }\n}\n\nexport default combineReducers( { food, calendar } )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from './reducers'\nimport { Provider } from 'react-redux'\n\nconst logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd(action.type)\n    return result\n  }\n  \nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n    reducer,\n    composeEnhancers(\n        applyMiddleware(logger)\n      )\n)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}